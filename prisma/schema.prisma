generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String    @unique @default(cuid())
  discordId String    @unique()
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  token     String    @unique @default(cuid())
  guildId   String?   @unique
  plan      Plan?
}

model Plan {
  user     User     @relation(fields: [userId], references: [id])
  userId   String   @unique
  expireAt DateTime
}

model Product {
  owner               User                  @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId             String
  id                  String                @unique @default(cuid())
  name                String
  version             String                @default("1.0.0")
  fxmanifest          String?               @db.Text
  files               File[]
  ConsumersOnProducts ConsumersOnProducts[]
}

model Consumer {
  id                  String                @unique @default(cuid())
  hwid                String?
  ip                  String                @unique()
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  discordId           String?               @unique
  ConsumersOnProducts ConsumersOnProducts[]
}

model ConsumersOnProducts {
  consumer Consumer @relation(fields: [consumerId], references: [id], onDelete: Cascade)
  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  consumerId String
  productId  String

  @@id([consumerId, productId])
}

enum sideFile {
  server
  client
  web
}

model File {
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  id        String   @unique @default(cuid())
  name      String
  side      sideFile
  code      String   @db.LongText
}
